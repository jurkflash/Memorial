@model Memorial.Core.Dtos.SpaceItemDto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>@Html.ActionLink(Resources.Mix.Space, "Index", "Links", null, null, "Space", new { area = "ConfigLink" }, null)</h4>
<h4>@Html.Raw(Resources.Mix.Item)</h4>

<form id="form">

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.PriceBR)
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(s => s.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(s => s.Price)
            If left empty will use default value :(@Model.SubProductServiceDto.Price)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.CodeBR)
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(s => s.Code, new { @class = "form-control" })
            @Html.ValidationMessageFor(s => s.Code)
            If left empty will use default value :(@Model.SubProductServiceDto.Code)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.AllowDepositBR)
        </div>
        <div class="col-md-6">
            Yes: @Html.RadioButtonFor(s => s.AllowDeposit, "True")<br />
            No: @Html.RadioButtonFor(s => s.AllowDeposit, "False")<br />
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.AllowDoubleBookBR)
        </div>
        <div class="col-md-6">
            Yes: @Html.RadioButtonFor(s => s.AllowDoubleBook, "True")<br />
            No: @Html.RadioButtonFor(s => s.AllowDoubleBook, "False")<br />
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.isOrderBR)
        </div>
        <div class="col-md-6">
            Default: @Html.RadioButtonFor(s => s.isOrder, "")<br />
            True: @Html.RadioButtonFor(s => s.isOrder, "True")<br />
            False: @Html.RadioButtonFor(s => s.isOrder, "False")<br />
            If left empty will use default value :(@Model.SubProductServiceDto.isOrder)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.Raw(Resources.Mix.InfoViewBR)
        </div>
        <div class="col-md-6">
            Info: @Html.RadioButtonFor(s => s.FormView, "Info", new { Checked = "checked" })<br />
            InfoHallForPray: @Html.RadioButtonFor(s => s.FormView, "InfoHallForPray")<br />
            InfoWithDeceased: @Html.RadioButtonFor(s => s.FormView, "InfoWithDeceased")<br />
            InfoWithoutDeceased: @Html.RadioButtonFor(s => s.FormView, "InfoWithoutDeceased")<br />
            InfoWithoutDeceasedAndFuneralCo: @Html.RadioButtonFor(s => s.FormView, "InfoWithoutDeceasedAndFuneralCo")<br />
        </div>
    </div>

    @Html.HiddenFor(s => s.Id)
    @Html.HiddenFor(s => s.SubProductServiceDtoId)
    @Html.HiddenFor(s => s.SpaceDtoId)
    <button class="btn btn-primary" id="save">@Html.Raw(Resources.Mix.Save)</button>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {

            $.validator.addMethod("onlyPositiveFloat", function (value, element, arg) {
                if (!isNaN(s) && Number(s) > 0)
                    return true;
                return false;
            }, "Postive numbers only");

            $.validator.addMethod("optionFiveCharacters", function (value, element, arg) {
                if (value.length != 0 && value.length != 5)
                    return false;
                return true;
            }, "Must 5 characters");

            $("#Code").rules("add",
                {
                    optionFiveCharacters: true
                });

            $('#save').click(function (e) {
                e.preventDefault();
                if ($("#form").valid()) {
                    var vm = {
                        id: $("#Id").val(),
                        subProductServiceDtoId: $("#SubProductServiceDtoId").val(),
                        spaceDtoId: $("#SpaceDtoId").val(),
                        price: $("#Price").val(),
                        code: $("#Code").val().toUpperCase(),
                        isOrder: $("input[name='isOrder']:checked").val(),
                        allowDeposit: $("input[name='AllowDeposit']:checked").val(),
                        allowDoubleBook: $("input[name='AllowDoubleBook']:checked").val(),
                        formView: $("input[name='FormView']:checked").val()
                    };

                    $.ajax({
                        url: "/api/spaces/mains/items/" + $("#Id").val(),
                        method: "put",
                        data: vm
                    })
                        .done(function (data) {
                            toastr.success(MEMORIAL_SUCCESS);
                        })
                        .fail(function () {
                            toastr.error(MEMORIAL_UNEXPECTED_HAPPENED);
                        });

                    return false;
                }
            });

        });
    </script>
}