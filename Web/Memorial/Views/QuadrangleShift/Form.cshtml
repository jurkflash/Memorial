@model Memorial.ViewModels.QuadrangleTransactionsFormViewModel
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderAction("ApplicantBrief", "Applicants", new { id = Model.QuadrangleTransactionDto.ApplicantId });}

<h2>Form</h2>

@using (Html.BeginForm("Save", "QuadrangleShift"))
{
    @Model.QuadrangleTransactionDto.AF

    <div class="form-group row">
        <div class="col-md-3">
            Quadrangle
        </div>
        <div class="col-md-6">
            @Model.QuadrangleTransactionDto.Quadrangle.Name
        </div>
    </div>
    if (Model.QuadrangleTransactionDto.AF == null)
    {
        <div class="form-group row">
            <div class="col-md-3">
                HasDeceased
            </div>
            <div class="col-md-6">
                @Model.QuadrangleTransactionDto.Quadrangle.hasDeceased
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-9">
                Shift To
            </div>
        </div>
    }
    else
    {
        <div class="form-group row">
            <div class="col-md-9">
                Shifted To
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                Quadrangle
            </div>
            <div class="col-md-6">
                @Model.QuadrangleDto.Name
            </div>
        </div>
        <hr />
        <div>Change To</div>
    }
    <div class="form-group row">
        <div class="col-md-3">
            Site
        </div>
        <div class="col-md-6">
            <select id="Sites" class="form-control"></select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-3">
            Centre
        </div>
        <div class="col-md-6">
            <select id="Centres" class="form-control"></select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-3">
            Area
        </div>
        <div class="col-md-6">
            <select id="Areas" class="form-control"></select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-3">
            Quadrangle
        </div>
        <div class="col-md-6">
            <select id="Quadrangles" class="form-control"></select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-2">
            Name
        </div>
        <div class="col-md-1">
            Description
        </div>
        <div class="col-md-2">
            Type
        </div>
        <div class="col-md-2">
            Price
        </div>
        <div class="col-md-2">
            Maintenance
        </div>
        <div class="col-md-2">
            LifeTimeMaintenance
        </div>
        <div class="col-md-1">
            Remark
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-2" id="qName"></div>
        <div class="col-md-1" id="qDescription"></div>
        <div class="col-md-2" id="qQuadrangleType"></div>
        <div class="col-md-2" id="qPrice"></div>
        <div class="col-md-2" id="qMaintenance"></div>
        <div class="col-md-2" id="qLifeTimeMaintenance"></div>
        <div class="col-md-1" id="qRemark"></div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            Price
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(c => c.QuadrangleTransactionDto.Price, new { @class = "form-control", @required = "required" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-3">
            Remark
        </div>
        <div class="col-md-6">
            @Html.TextAreaFor(c => c.QuadrangleTransactionDto.Remark, new { @class = "form-control" })
        </div>
    </div>

    @Html.HiddenFor(c => c.QuadrangleTransactionDto.QuadrangleItemId)
    @Html.HiddenFor(c => c.QuadrangleTransactionDto.QuadrangleId)
    @Html.HiddenFor(c => c.QuadrangleTransactionDto.ApplicantId)
    @Html.HiddenFor(c => c.QuadrangleTransactionDto.ShiftedQuadrangleId)
    @Html.HiddenFor(c => c.QuadrangleTransactionDto.AF)
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/jqueryuicss")

    <script>
        function sites() {
            $.ajax({
                url: "/api/Sites/GetSites"
            })
                .done(function (response) {
                    var len = response.length;
                    $("#Sites").empty();
                    $("#Sites").append("<option value='0'>Please Select</option>");
                    for (var i = 0; i < len; i++) {
                        var id = response[i]['id'];
                        var name = response[i]['name'];
                        $("#Sites").append("<option value='" + id + "'>" + name + "</option>");
                    }
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });
        }

        function centres() {
            $.ajax({
                url: "/api/Quadrangles/GetCentre",
                data: { siteId: $("#Sites").val() }
            })
                .done(function (response) {
                    var len = response.length;
                    $("#Centres").empty();
                    $("#Centres").append("<option value='0'>Please Select</option>");
                    for (var i = 0; i < len; i++) {
                        var id = response[i]['id'];
                        var name = response[i]['name'];
                        $("#Centres").append("<option value='" + id + "'>" + name + "</option>");
                    }
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });
        }

        function areas() {
            $.ajax({
                url: "/api/Quadrangles/GetArea",
                data: { centreId: $("#Centres").val() }
            })
                .done(function (response) {
                    var len = response.length;
                    $("#Areas").empty();
                    $("#Areas").append("<option value='0'>Please Select</option>");
                    for (var i = 0; i < len; i++) {
                        var id = response[i]['id'];
                        var name = response[i]['name'];
                        $("#Areas").append("<option value='" + id + "'>" + name + "</option>");
                    }
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });
        }

        function quadrangles() {
            $.ajax({
                url: "/api/Quadrangles/GetAvailableQuadrangleByAreaId",
                data: { areaId: $("#Areas").val() }
            })
                .done(function (response) {
                    var len = response.length;
                    $("#Quadrangles").empty();
                    $("#Quadrangles").append("<option value='0'>Please Select</option>");
                    for (var i = 0; i < len; i++) {
                        var id = response[i]['id'];
                        var name = response[i]['name'];
                        $("#Quadrangles").append("<option value='" + id + "'>" + name + "</option>");
                    }
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });
        }

        function clearQuadrangle() {
            $("#qName").empty();
            $("#qDescription").empty();
            $("#qPrice").empty();
            $("#qMaintenance").empty();
            $("#qLifeTimeMaintenance").empty();
            $("#qRemark").empty();
            $("#qQuadrangleType").empty();
        }

        function quadrangle() {
            clearQuadrangle();

            $.ajax({
                url: "/api/Quadrangles/GetQuadrangle",
                data: { id: $("#Quadrangles").val() }
            })
                .done(function (response) {
                    if (response != null) {
                        $("#qName").html(response['name']);
                        $("#qDescription").html(response['description']);
                        $("#qPrice").html(response['price']);
                        $("#qMaintenance").html(response['maintenance']);
                        $("#qLifeTimeMaintenance").html(response['lifeTimeMaintenance']);
                        $("#qRemark").html(response['remark']);
                        $("#qQuadrangleType").html(response['quadrangleTypeDto.name']);
                        $("#QuadrangleTransactionDto_ShiftedQuadrangleId").val(response['id']);
                    }
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });
        }

        $(document).ready(function () {
            sites();

            $("#Sites").change(function () {
                $("#Centres").empty();
                $("#Areas").empty();
                $("#Quadrangles").empty();
                clearQuadrangle();

                if ($(this).val() != 0) {
                    centres();
                }
            })

            $("#Centres").change(function () {
                $("#Areas").empty();
                $("#Quadrangles").empty();
                clearQuadrangle();

                if ($(this).val() != 0) {
                    areas();
                }
            })

            $("#Areas").change(function () {
                $("#Quadrangles").empty();
                clearQuadrangle();

                if ($(this).val() != 0) {
                    quadrangles();
                }
            });

            $("#Quadrangles").change(function () {
                clearQuadrangle();

                if ($(this).val() != 0) {
                    quadrangle();
                }
            });
        });

    </script>

}
